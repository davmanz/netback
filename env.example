# =========================================
# Netback - .env.example
# Copia este archivo como `.env` y completa los valores.
# Valores de ejemplo NO deben usarse en producción.
# =========================================

# ---------- Global ----------
ENV=development            # development | staging | production
TZ=America/Santiago        # Zona horaria IANA válida (ej.: America/Lima, America/Mexico_City)
LOG_LEVEL=INFO             # DEBUG | INFO | WARNING | ERROR

# ---------- Docker / Puertos (ajusta si es necesario) ----------
PUBLIC_HTTP_PORT=80        # Puerto público para Nginx (frontend)
BACKEND_HTTP_PORT=8000     # Puerto interno del backend Django
PROXY_HTTP_PORT=8080       # Puerto del Proxy (FastAPI)

# =========================================
# Backend (Django)
# =========================================
DJANGO_SECRET_KEY=change-me-please               # Genera uno fuerte (p. ej. con `python -c "import secrets; print(secrets.token_urlsafe(64))"`)
DJANGO_DEBUG=false                               # true/false
DJANGO_ALLOWED_HOSTS=backend,localhost,127.0.0.1 # Coma-separado; NO usar '*' en prod
TIME_ZONE=America/Santiago

# CORS / CSRF: usa orígenes explícitos si allow_credentials=true
CORS_ALLOWED_ORIGINS=http://localhost,http://frontend
CSRF_TRUSTED_ORIGINS=http://localhost,http://frontend

# Sentry (opcional)
SENTRY_DSN=

# Encriptación (opcional pero recomendado)
# Clave Fernet urlsafe base64 de 32 bytes; genera con:
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
FERNET_KEY=

# Superusuario automático (opcional, para init)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_EMAIL=admin@example.com
DJANGO_SUPERUSER_PASSWORD=pass1234

# =========================================
# Base de Datos (PostgreSQL)
# =========================================
POSTGRES_DB=netback
POSTGRES_USER=netback
POSTGRES_PASSWORD=netback
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Alternativa: URL única (si tu settings soporta dj-database-url)
# DATABASE_URL=postgres://netback:netback@postgres:5432/netback

# =========================================
# Cache y Cola (Redis)
# =========================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_URL=redis://redis:6379/0

# =========================================
# Celery
# =========================================
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}
CELERY_TIMEZONE=${TIME_ZONE}

# Scheduler:
# - Para usar django_celery_beat (en BD): CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler
# - Para usar beat_schedule definido en código: deja vacío y ejecuta celery-beat sin --scheduler
CELERY_BEAT_SCHEDULER=django_celery_beat.schedulers:DatabaseScheduler

# =========================================
# Integraciones
# =========================================

# --- Zabbix ---
ZABBIX_API_URL=
ZABBIX_API_TOKEN=

# (Opcional) Correo saliente SMTP
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
EMAIL_USE_TLS=true
DEFAULT_FROM_EMAIL=Netback <no-reply@example.com>

# =========================================
# Proxy (FastAPI)
# =========================================
FASTAPI_PROXY_DEBUG=false
# URL interno del backend al que el proxy reenviará (dentro de la red de Docker)
BACKEND_INTERNAL_URL=http://backend:${BACKEND_HTTP_PORT}
# Orígenes permitidos por CORS del proxy (coma-separado)
FASTAPI_ALLOWED_ORIGINS=http://localhost,http://frontend

# Sentry (opcional)
FASTAPI_SENTRY_DSN=

# =========================================
# Frontend (React + Nginx)
# =========================================
# Si tu frontend usa Vite, usa prefijo VITE_
VITE_API_BASE_URL=http://proxy:${PROXY_HTTP_PORT}   # Base para fetch desde el navegador (p.ej. http://localhost/api o http://proxy:8080)
VITE_ENABLE_SENTRY=false
VITE_SENTRY_DSN=

# Si tu frontend usa Create React App (CRA), usa prefijo REACT_APP_
REACT_APP_API_BASE_URL=http://proxy:${PROXY_HTTP_PORT}

# Build
NODE_ENV=production
PUBLIC_URL=/

# =========================================
# Seguridad adicional (opcional)
# =========================================
# Forzar HTTPS detrás de proxy/Nginx (si tu setup lo soporta)
SECURE_SSL_REDIRECT=false
SESSION_COOKIE_SECURE=false
CSRF_COOKIE_SECURE=false

# Headers de seguridad (si se inyectan desde app)
SECURITY_HEADERS_ENABLED=true
